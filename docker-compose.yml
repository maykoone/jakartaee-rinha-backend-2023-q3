version: '3.5'

services:
 
  db:
    image: postgres:15.4
    command: postgres -c 'synchronous_commit=off' -c 'shared_buffers=375MB' -c 'maintenance_work_mem=375MB' -c 'max_connections=30'
    restart: always
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./import.sql:/docker-entrypoint-initdb.d/import.sql
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1.5g'

  api1: # API - Instância 01
    image: maykoone/jakartaee-rinha-backend:latest
    hostname: api1
    environment:
      DB_SERVER_NAME: db
    depends_on:
      - db
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '0.425'
          memory: '0.5g'

  api2: # API - Instância 02
    image: maykoone/jakartaee-rinha-backend:latest
    hostname: api2
    environment:
      DB_SERVER_NAME: db
    depends_on:
      - db
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '0.425'
          memory: '0.5g'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.5g'

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8085:8080
 
volumes:
  pgdata:
